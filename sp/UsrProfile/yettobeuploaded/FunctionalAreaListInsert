CREATE OR REPLACE FUNCTION FunctionalAreaListInsert(
_FunctionalAreaType_id integer,
_FunctionalArea varchar,
RequestedOperation VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;


IF EXISTS ( SELECT id FROM "UserProfile_functionalarealist" WHERE "FunctionalArea"=_FunctionalArea and "FunctionalAreaType_id"=_FunctionalAreaType_id) THEN
	result := 2;
  	rescode := 161;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'functionalarealist','UserProfile');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

INSERT INTO "UserProfile_functionalarealist"(
             "FunctionalAreaType_id", "FunctionalArea")
    VALUES (_FunctionalAreaType_id, _FunctionalArea);

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 162;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "UserProfile_functionalarealist" WHERE "FunctionalArea"=_FunctionalArea and "FunctionalAreaType_id"=_FunctionalAreaType_id;


INSERT INTO "UserProfile_userprofilelogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription","LogsPreviousState")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),'INSERT','NULL-Inserting Value');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


