CREATE OR REPLACE FUNCTION MarksUpdate(
_Id integer,
_SessionStart timestamp without time zone,
_SessionEnd timestamp without time zone,
_SessionNumber INTEGER,
_SessionType INTEGER,
_TotaMarks INTEGER,
_SecuredMarks INTEGER,
_TotalReappears INTEGER,
_ReappearsRemaining INTEGER,
_DegreeType INTEGER,
_Board INTEGER,
_Degree INTEGER,
_UserId INTEGER,
prev varchar,
RequestedOperation VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
    
BEGIN 
temp := 0;

IF NOT EXISTS ( SELECT id FROM "UserProfile_marks" WHERE id=_Id) THEN
	result := -4;
  	rescode := 161;
	RETURN;
END IF;

IF EXISTS ( SELECT id FROM "UserProfile_marks" WHERE "UserId_id"=_UserId and "SessionNumber"=_SessionNumber and "Degree_id"=_Degree and id<> _Id) THEN
	result := -3;
  	rescode := 200;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'marks','UserProfile');

IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;


Update "UserProfile_marks"
set "SessionStart"=_SessionStart,
 "SessionEnd"=_SessionEnd, 
 "SessionNumber"=_SessionNumber, 
 "SessionType_id"=_SessionType, 
 "TotalMarks"=_TotaMarks,
 "SecuredMarks"=_SecuredMarks,
 "TotalReappers"=_TotalReappears,
 "ReappersRemaining"=_ReappearsRemaining,
 "DegreeType_id"=_DegreeType,
 "Board_id"=_Board,
 "Degree_id"=_Degree,
 "UserId_id"=_UserId,
 "State_id"=varrec.varsci
 where id=_Id;

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 162;
	result := -1;
        RETURN;
END IF;

rescode:=_Id;
INSERT INTO "UserProfile_userprofilelogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription","LogsPreviousState")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),'Update',prev);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


