CREATE OR REPLACE FUNCTION UserRegUpdate(
ContentType integer,
Record integer,
Group integer,
PriorityVal INTEGER,
PriorityDesc Text,
RequestedOperation VARCHAR,
LogsDesc VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;

IF NOT EXISTS ( SELECT id FROM "UserReg_priority" WHERE "ContentType_id"=ContentType AND "Record"=Record AND "UserGroup"= Group) THEN
	result := 2;
  	rescode := 136;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'priority','UserReg');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

UPDATE "UserReg_priority"
SET "PriorityVal"=PriorityVal, 
	"PriorityDesc"=PriorityDesc, 
	
WHERE "ContentType_id"=ContentType AND "Record"=Record AND "UserGroup"=Group;



GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 137;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "UserReg_priority" WHERE "ContentType_id"=ContentType AND "Record"=Record AND "UserGroup"= Group;
INSERT INTO "UserReg_registeruserlogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),LogsDesc);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


