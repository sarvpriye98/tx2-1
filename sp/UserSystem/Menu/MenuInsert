CREATE OR REPLACE FUNCTION MenuInsert(
MenuName VARCHAR,
MenuDesc VARCHAR,
MenuUrl VARCHAR,
MenuPid integer,
MenuIcon VARCHAR,
RequestedOperation VARCHAR,
by_user INTEGER,
_ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;

IF  EXISTS ( SELECT id FROM "Users_menu" WHERE "MenuUrl"=MenuUrl AND "MenuPid"=MenuPid) THEN
	result := 2;
  	rescode := 101;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'menu','Users');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

INSERT INTO  "Users_menu"("MenuName", "MenuDesc", "MenuUrl", "MenuPid", "State_id",  "MenuIcon") 
VALUES(MenuName,MenuDesc,MenuUrl,MenuPid,varrec.varsci,MenuIcon);

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 102;
	result := -1;
        RETURN;
END IF;

 SELECT id INTO rescode FROM "Users_menu" WHERE "MenuUrl"=MenuUrl AND "MenuPid"=MenuPid;
INSERT INTO "Users_userlogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription", "LogsPreviousState")
VALUES(by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),RequestedOperation,'INSERT');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


