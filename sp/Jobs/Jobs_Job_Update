CREATE OR REPLACE FUNCTION Jobs_Job_Update(
_id integer,
_Company_id integer,
_Profile varchar,
_Designation varchar,
_Package varchar,
_DateOfVisit timestamp without time zone,
_JobDetails1 varchar,
_JobDetails2 varchar,
_RecruitmentRounds varchar,
_ContactPersonName varchar,
_ContactPersonMobile varchar,
_ContactPersonEmail varchar,
_ContactPersonDetails varchar,
_RegistrationsUpto timestamp without time zone,
prev varchar,
RequestedOperation VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;

IF NOT EXISTS ( SELECT id FROM "jobs_job" WHERE id=_id) THEN
	result := -4;
  	rescode := 161;
	RETURN;
END IF;

IF EXISTS ( SELECT id FROM "jobs_job" WHERE "Company_id"=_Company_id and "Profile"=_Profile and "Designation"=_Designation and "DateOfVisit"=_DateOfVisit and id<>_id) THEN
	result := -3;
  	rescode := 200;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'job','jobs');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

Update "jobs_job"
set 
"Company_id"=_Company_id,
"Profile"=_Profile,
"Designation"=_Designation,
"Package"=_Package,
"DateOfVisit"=_DateOfVisit,
"JobDetails1"=_JobDetails1,
"JobDetails2"=_JobDetails2,
"RecruitmentRounds"=_RecruitmentRounds,
"ContactPersonName"=_ContactPersonName,
"ContactPersonMobile"=_ContactPersonMobile,
"ContactPersonEmail"=_ContactPersonEmail,
"ContactPersonDetails"=_ContactPersonDetails,
"RegistrationsUpto"=_RegistrationsUpto,
"State_id"=varrec.varsci
where id=_id;
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 162;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "jobs_job" WHERE "Company_id"=_Company_id and "Profile"=_Profile and "Designation"=_Designation and "DateOfVisit"=_DateOfVisit;


INSERT INTO "jobs_jobslogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription","LogsPreviousState")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),'UPDATE',prev);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


