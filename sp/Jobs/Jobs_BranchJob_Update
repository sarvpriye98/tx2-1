CREATE OR REPLACE FUNCTION Jobs_BranchJob_Update(
_id integer,
_Branch_id integer,
_Job_id integer,
_JobType_id integer,
_Comments1 varchar,
_Comments2 varchar,
prev varchar,
RequestedOperation VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;

IF NOT EXISTS ( SELECT id FROM "jobs_branchjob" WHERE id=_id) THEN
	result := -4;
  	rescode := 161;
	RETURN;
END IF;
IF EXISTS ( SELECT id FROM "jobs_branchjob" WHERE "Branch_id"=_Branch_id and "Job_id"=_Job_id and "JobType_id"=_JobType_id and id<>_id) THEN
	result := -3;
  	rescode := 200;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'branchjob','jobs');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

update "jobs_branchjob"
set "Branch_id"=_Branch_id,
"Job_id"=_Job_id,
"JobType_id"=_JobType_id,
"State_id"=varrec.varsci,
"Comments1"=_Comments1,
"Comments2"=_Comments2
where id=_id;

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 162;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "jobs_branchjob" WHERE "Branch_id"=_Branch_id and "Job_id"=_Job_id and "JobType_id"=_JobType_id;


INSERT INTO "jobs_jobslogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription","LogsPreviousState")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),'UPDATE',prev);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


